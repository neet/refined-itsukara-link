fragment PageInfo on PageInfo {
  startCursor
  endCursor
  hasNextPage
  hasPreviousPage
  totalCount
}

fragment TeamSmall on Team {
  id
  name
}

fragment Activity on Activity {
  id
  name
  description
  public
  url
  thumbnail
  startAt
  endAt
  performers {
    ...Performer
  }
  category {
    name
  }
  team {
    ...TeamSmall
  }
}

fragment Performer on Performer {
  id
  name
  latinName
  ruby
  avatar
  color
  description
  fullBody
  public
  position
}

fragment SocialAccount on SocialAccount {
  id
  ... on YoutubeAccount {
    channelId
    channelName
  }
  ... on TwitterAccount {
    screenName
  }
}

fragment PerformerLarge on Performer {
  ...Performer
  teams {
    ...Team
  }
  socialAccounts {
    ...SocialAccount
  }
}

fragment Team on Team {
  id
  name
  members {
    ...Performer
  }
}

fragment Category on Category {
  id
  name
  activities {
    pageInfo {
      totalCount
    }
  }
}

query FetchActivities($input: ActivitiesInput) {
  activities(input: $input) {
    edges {
      cursor
      node {
        ...Activity
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}

query FetchPerformerLarge($id: ID!) {
  performer(id: $id) {
    ...PerformerLarge
  }
  activities(input: { performerId: $id, last: 100 }) {
    edges {
      cursor
      node {
        ...Activity
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}

query FetchPerformers {
  performers(input: { first: 100 }) {
    edges {
      cursor
      node {
        ...Performer
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}

query FetchTeams {
  teams(input: { first: 100 }) {
    edges {
      cursor
      node {
        ...Team
      }
    }
    pageInfo {
      ...PageInfo
    }
  }
}

fragment SearchResult on SearchResult {
  activities {
    ...Activity
  }
  performers {
    ...Performer
  }
  teams {
    ...Team
  }
  categories {
    ...Category
  }
}

query Search($query: String!) {
  search(query: $query) {
    ...SearchResult
  }
}

query FetchCategories {
  categories {
    nodes {
      ...Category
    }
  }
}

query FetchSidebar {
  isSidebarExpanded @client
}

mutation ToggleSidebar($expanded: Boolean!) {
  toggleSidebar(expanded: $expanded) @client
}
